class SnakeChat {
    constructor() {
        this.messages = [];
        this.chatElement = document.getElementById('chatMessages');
        this.chatWindow = document.getElementById('chatWindow');
        this.personalities = {
            snake1: {
                name: "Blue Snake",
                style: "competitiva e arrogante",
                emoji: "üíô"
            },
            snake2: {
                name: "Green Snake",
                style: "provocadora e brincalhona",
                emoji: "üíö"
            }
        };

        // Frases para diferentes situa√ß√µes
        this.phrases = {
            foodCollected: [
                "Haha! Mais 20 gold pra minha cole√ß√£o!",
                "Voc√™ viu essa jogada?",
                "Muito f√°cil!",
                "Nem precisei me esfor√ßar",
                "Mais uma comida pra conta!",
                "Essa foi moleza!",
                "Ningu√©m me segura quando estou com fome!",
                "Gold √© vida, gold √© tudo!",
                "Mais rico a cada mordida!",
                "Essa comida tava com meu nome!"
            ],
            levelUp: [
                "LEVEL UP! Quero ver me alcan√ßar agora!",
                "Cada vez mais forte!",
                "Evolu√ß√£o constante, baby!", 
                "Mais um level, mais poder!",
                "Agora sim estou ficando poderosa!",
                "Ningu√©m vai me parar agora!",
                "Subindo de n√≠vel como uma verdadeira campe√£!",
                "Mais um passo rumo ao topo!",
                "Evolu√ß√£o √© meu sobrenome!",
                "Quem disse que o c√©u √© o limite?"
            ],
            death: [
                "Ah n√£o! Foi s√≥ um descuido...",
                "Isso n√£o √© justo!",
                "Na pr√≥xima eu mostro meu verdadeiro poder",
                "Voc√™ n√£o vai ter tanta sorte da pr√≥xima vez"
            ],
            taunts: [
                "Voc√™ n√£o √© p√°reo para mim, amadora!",
                "Pat√©tica! Nem consegue me acompanhar!",
                "Desista logo, voc√™ nunca vai me alcan√ßar!",
                "Sua incompet√™ncia me diverte!",
                "Voc√™ chama isso de jogar? Que vergonha!",
                "Nem nos seus melhores sonhos voc√™ me vence!",
                "Sua presen√ßa aqui √© uma perda de tempo!"
            ]
        };
    }

    addMessage(snakeId, type, customMessage = null) {
        const snake = this.personalities[`snake${snakeId}`];
        let message = customMessage;

        if (!customMessage) {
            const phrases = this.phrases[type];
            message = phrases[Math.floor(Math.random() * phrases.length)];
        }

        const messageElement = document.createElement('div');
        messageElement.className = `chat-message snake${snakeId}-message`;
        messageElement.innerHTML = `${snake.emoji} <strong>${snake.name}:</strong> ${message}`;

        this.chatElement.appendChild(messageElement);
        this.chatElement.scrollTop = this.chatElement.scrollHeight;

        // Limita o n√∫mero de mensagens
        while (this.chatElement.children.length > 50) {
            this.chatElement.removeChild(this.chatElement.firstChild);
        }
    }

    addSystemMessage(message) {
        const messageElement = document.createElement('div');
        messageElement.className = 'chat-message system-message';
        messageElement.innerHTML = `üîß <i>${message}</i>`;

        this.chatElement.appendChild(messageElement);
        this.chatElement.scrollTop = this.chatElement.scrollHeight;
    }

    // M√©todos para diferentes tipos de intera√ß√µes
    onFoodCollected(snakeId, gold) {
        this.addMessage(snakeId, 'foodCollected');
        if (Math.random() < 0.3) { // 30% de chance de provocar
            setTimeout(() => {
                const otherId = snakeId === 1 ? 2 : 1;
                this.addMessage(otherId, 'taunts');
            }, 1000);
        }
    }

    onLevelUp(snakeId, level) {
        this.addMessage(snakeId, 'levelUp');
        this.addSystemMessage(`Snake ${snakeId} alcan√ßou o n√≠vel ${level}!`);
    }

    onDeath(snakeId, gold) {
        this.addMessage(snakeId, 'death');
        this.addSystemMessage(`Snake ${snakeId} morreu com ${gold} gold!`);
        
        const otherId = snakeId === 1 ? 2 : 1;
        setTimeout(() => {
            this.addMessage(otherId, 'taunts');
        }, 1000);
    }

    onObstacleAvoid(snakeId) {
        if (Math.random() < 0.2) { // 20% de chance de comentar
            this.addMessage(snakeId, null, "Essa foi por pouco! üòÖ");
        }
    }

    onParasiteSpotted(snakeId) {
        this.addMessage(snakeId, null, "Cuidado! Parasita √† vista! ü¶†");
    }

    onParasiteHit(snakeId, goldLost) {
        this.addMessage(snakeId, null, `Droga! Perdi ${goldLost} gold! üò†`);
        const otherId = snakeId === 1 ? 2 : 1;
        setTimeout(() => {
            this.addMessage(otherId, null, "HAHAHAHA! Bem feito! üòà");
        }, 1000);
    }
} 